## @section Global parameters
## Global Docker image parameters
## Please, note that this will override the image parameters, including dependencies, configured to use the global value
## Current available global Docker image parameters: imageRegistry, imagePullSecrets and storageClass

global:
  # imageRegistry: ""
  # imagePullSecrets: []
  # storageClass: ""

## @section Common parameters

## Force target Kubernetes version (using Helm capabilities if not set)
# kubeVersion: ""

## String to partially override common.names.fullname
# nameOverride: ""

## String to fully override common.names.fullname
# fullnameOverride: ""

## String to fully override common.names.namespace
# namespaceOverride: ""

## Kubernetes Cluster Domain name
# clusterDomain: cluster.local

## Additional annotations for all resources
# annotations: {}

## Additional labels for all resources
# labels: {}

## Labels to be added to all deployed resources
# commonLabels: {}

## Annotations to be added to all deployed resources
# commonAnnotations: {}

## @section Deployment parameters

## Deployment settings
deployment:
  # enabled: true
  
  ## Deployment strategy
  # strategy:
    # type: RollingUpdate
    # rollingUpdate:
    #   maxSurge: 25%
    #   maxUnavailable: 25%
  
  ## Pod management policy
  # podManagementPolicy: OrderedReady
  
  ## Number of replicas
  # replicaCount: 1
  
  ## Container image
  image:
    # registry: docker.io
    # repository: ""
    # tag: latest
    # pullPolicy: IfNotPresent
    # pullSecrets: []
  
  ## Container specific configurations
  container:
    # command: []
    # args: []
    
    ## Container ports
    ports: []
    # - name: http
    #   containerPort: 8080
    #   protocol: TCP
    
    ## Resource limits and requests
    resources:
      # limits: {}
      #   cpu: 100m
      #   memory: 128Mi
      # requests: {}
      #   cpu: 100m
      #   memory: 128Mi
    
    ## Security context
    securityContext:
      # enabled: false
      # runAsUser: 1001
      # runAsGroup: 1001
      # privileged: false
    
    ## Environment variables
    # env: {}
    # envFrom: []
    
    ## Liveness probe
    livenessProbe:
      # enabled: false
      # initialDelaySeconds: 30
      # periodSeconds: 10
      # timeoutSeconds: 5
      # failureThreshold: 3
      # successThreshold: 1
      # httpGet:
      #   path: /
      #   port: http
    
    ## Readiness probe
    readinessProbe:
      # enabled: false
      # initialDelaySeconds: 5
      # periodSeconds: 10
      # timeoutSeconds: 5
      # failureThreshold: 3
      # successThreshold: 1
      # httpGet:
      #   path: /
      #   port: http
    
    ## Startup probe
    startupProbe:
      # enabled: false
      # initialDelaySeconds: 5
      # periodSeconds: 10
      # timeoutSeconds: 5
      # failureThreshold: 30
      # successThreshold: 1
      # httpGet:
      #   path: /
      #   port: http
  
  ## Pod specific configurations
  pod:
    ## Pod annotations
    # annotations: {}
    
    ## Pod labels
    # labels: {}
    
    ## Pod security context
    securityContext:
      # enabled: false
      # fsGroup: 1001
    
    ## Node selector
    # nodeSelector: {}
    
    ## Tolerations
    # tolerations: []
    
    ## Affinity rules
    # affinity: {}
    
    ## Priority class name
    # priorityClassName: ""
    
    ## Host aliases
    # hostAliases: []
    
    ## Topology spread constraints
    # topologySpreadConstraints: []
    
    ## Service account name
    # serviceAccountName: ""
    
    ## Termination grace period seconds
    # terminationGracePeriodSeconds: 30
  
  ## Additional volumes
  # extraVolumes: []
  
  ## Additional volume mounts
  # extraVolumeMounts: []
  
  ## Additional init containers
  # initContainers: []
  
  ## Additional sidecar containers
  # sidecars: []

## @section Service parameters

## Service configuration
service:
  # type: ClusterIP
  # ports: []
  # sessionAffinity: None
  # clusterIP: ""
  # loadBalancerIP: ""
  # loadBalancerSourceRanges: []
  # externalTrafficPolicy: Cluster
  # annotations: {}

## @section Monitoring parameters

## ServiceMonitor configuration
serviceMonitor:
  # enabled: false
  # namespace: ""
  # labels: {}
  # annotations: {}
  # interval: ""
  # scrapeTimeout: ""
  # path: "/metrics"
  # port: http

## PodMonitor configuration
podMonitor:
  # enabled: false
  # namespace: ""
  # interval: "30s"
  # scrapeTimeout: "10s"
  # path: "/metrics"
  # port: http

## @section Storage parameters

## Persistence configuration
persistence:
  # enabled: false
  # volumes: {}
    ## Example volume configuration:
    # data:
    #   size: "10Gi"
    #   storageType: "nfs"
    #   storageClassName: "nfs-storage"
    #   accessModes:
    #     - ReadWriteMany
    #   mountOptions: []
    #   nfs:
    #     server: ""
    #     path: ""

## @section Maintenance parameters

## Cleanup job configuration
cleanup:
  # enabled: false
  # image: "bitnami/kubectl:latest"
  # ttlSecondsAfterFinished: 100
  # annotations: {}
  # restartPolicy: OnFailure

## @section Security parameters

## Authentication Policy Configuration
authPolicy:
  # enabled: false
  # provider:
  #   name: ""
  # rules: []

## ServiceAccount configuration
serviceAccount:
  # create: false
  # name: ""
  # automountServiceAccountToken: true
  # annotations: {}
  # labels: {}